# 1. X가 3으로 나누어 떨어지면, 3으로 나눈다.
# 2. X가 2로 나누어 떨어지면, 2로 나눈다.
# 3. 1을 뺀다.
# 정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다.

# 연산을 사용하는 횟수의 최솟값을 출력한다
# N을 1로 만드는 방법에 포함되어 있는 수를 공백으로 구분해서 순서대로 출력한다

# dp이용 -> 리스트 내부에 연산의 최솟값과 계산에 들어가는 수를 모두 넣는다

n = int(input())
dp = [[0, []] for _ in range(n + 1)]

dp[1][0] = 0
dp[1][1] = [1]

for i in range(2, n + 1):
    
    dp[i][0] = dp[i-1][0] + 1
    dp[i][1] = dp[i-1][1] + [i]
    
    # 3으로 나누어 떨어지는 경우
    if (i % 3 == 0) and (dp[i // 3][0] + 1 < dp[i][0]):
        dp[i][0] = dp[i // 3][0] + 1
        dp[i][1] = dp[i // 3][1] + [i]
        
    # 2로 나누어 떨어지는 경우
    if (i % 2 == 0) and (dp[i // 2][0] + 1 < dp[i][0]):
        dp[i][0] = dp[i // 2][0] + 1
        dp[i][1] = dp[i // 2][1] + [i]

print(dp[n][0])
print(*reversed(dp[n][1]))
